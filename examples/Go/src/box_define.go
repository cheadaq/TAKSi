// This file is auto-generated by Tabugen v0.9.1, DO NOT EDIT!
package config

import (
	"log"
	"strconv"
	"strings"
)

var (
	_ = log.Panicf
	_ = strings.Split
	_ = strconv.Itoa
)

type ProbabilityGoodsDefine struct {
	GoodsID     string // 物品1id
	Num         uint32 // 物品1数量
	Probability uint32 // 物品1概率
}

//  随机宝箱.xlsx
type BoxProbabilityDefine struct {
	ID               string // ID
	Total            int    // 奖励总数
	Time             int    // 冷却时间
	Repeat           bool   // 是否可重复
	ProbabilityGoods []ProbabilityGoodsDefine
}

func (p *BoxProbabilityDefine) ParseFrom(record map[string]string) error {
	p.ID = strings.TrimSpace(record["ID"])
	p.Total = parseInt(record["Total"])
	p.Time = parseInt(record["Time"])
	p.Repeat = parseBool(record["Repeat"])
	for i := 1; i < len(record); i++ {
		var off = strconv.Itoa(i)
		var val ProbabilityGoodsDefine
		if str, found := record["GoodsID"+off]; found {
			val.GoodsID = strings.TrimSpace(str)
		} else {
			break
		}
		if str, found := record["Num"+off]; found {
			val.Num = parseU32(str)
		} else {
			break
		}
		if str, found := record["Probability"+off]; found {
			val.Probability = parseU32(str)
		} else {
			break
		}
		p.ProbabilityGoods = append(p.ProbabilityGoods, val)
	}
	return nil
}
