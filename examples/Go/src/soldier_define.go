// This file is auto-generated by Tabugen v0.9.1, DO NOT EDIT!
package config

import (
	"log"
	"strconv"
	"strings"
)

var (
	_ = log.Panicf
	_ = strings.Split
	_ = strconv.Itoa
)

//  兵种.xlsx
type SoldierPropertyDefine struct {
	Name               string  `json:"name"`                 // 士兵ID
	Level              int     `json:"level"`                // 士兵等级
	NameID             string  `json:"name_id"`              // 名字
	Description        string  `json:"description"`          // 描述
	BuildingName       string  `json:"building_name"`        // 所属建筑
	BuildingLevel      uint32  `json:"building_level"`       // 建筑等级
	RequireSpace       uint32  `json:"require_space"`        // 登陆艇占用空间
	Volume             uint32  `json:"volume"`               // 体积
	UpgradeTime        uint32  `json:"upgrade_time"`         // 升级消耗的时间(秒）
	UpgradeMaterialID  string  `json:"upgrade_material_id"`  // 升级消耗的材料
	UpgradeMaterialNum int64   `json:"upgrade_material_num"` // 升级消耗的数量
	ConsumeMaterial    string  `json:"consume_material"`     // 生产消耗的材料
	ConsumeMaterialNum int     `json:"consume_material_num"` // 生产消耗的数量
	ConsumeTime        int     `json:"consume_time"`         // 生产消耗的时间（秒/个）
	Act                int     `json:"act"`                  // 攻击
	Hp                 int     `json:"hp"`                   // 血量
	BombLoad           int16   `json:"bomb_load"`            // 载弹量
	Hurt               uint32  `json:"hurt"`                 // buff伤害
	Duration           float32 `json:"duration"`             // 持续时间
	TriggerInterval    float32 `json:"trigger_interval"`     // 触发间隔
	SearchScope        int16   `json:"search_scope"`         // 搜索范围
	AtkFrequency       float32 `json:"atk_frequency"`        // 攻击间隔
	AtkRange           float64 `json:"atk_range"`            // 攻击距离
	MovingSpeed        float64 `json:"moving_speed"`         // 移动速度
	EnableBurn         bool    `json:"enable_burn"`          // 燃烧特效

}

func (p *SoldierPropertyDefine) ParseFrom(record map[string]string) error {
	p.Name = record["Name"]
	p.Level = parseInt(record["Level"])
	p.NameID = record["NameID"]
	p.Description = record["Description"]
	p.BuildingName = record["BuildingName"]
	p.BuildingLevel = parseU32(record["BuildingLevel"])
	p.RequireSpace = parseU32(record["RequireSpace"])
	p.Volume = parseU32(record["Volume"])
	p.UpgradeTime = parseU32(record["UpgradeTime"])
	p.UpgradeMaterialID = record["UpgradeMaterialID"]
	p.UpgradeMaterialNum = parseI64(record["UpgradeMaterialNum"])
	p.ConsumeMaterial = record["ConsumeMaterial"]
	p.ConsumeMaterialNum = parseInt(record["ConsumeMaterialNum"])
	p.ConsumeTime = parseInt(record["ConsumeTime"])
	p.Act = parseInt(record["Act"])
	p.Hp = parseInt(record["Hp"])
	p.BombLoad = parseI16(record["BombLoad"])
	p.Hurt = parseU32(record["Hurt"])
	p.Duration = parseF32(record["Duration"])
	p.TriggerInterval = parseF32(record["TriggerInterval"])
	p.SearchScope = parseI16(record["SearchScope"])
	p.AtkFrequency = parseF32(record["AtkFrequency"])
	p.AtkRange = parseF64(record["AtkRange"])
	p.MovingSpeed = parseF64(record["MovingSpeed"])
	p.EnableBurn = parseBool(record["EnableBurn"])
	return nil
}
