// This file is auto-generated by Tabular v1.4.0, DO NOT EDIT!

#include "AutogenConfig.h"
#include <stddef.h>
#include <assert.h>
#include <memory>
#include <fstream>
#include "Utility/Conv.h"
#include "Utility/StringUtil.h"

using namespace std;

#ifndef ASSERT
#define ASSERT assert
#endif


namespace config
{

// parse data object from an csv row
int SoldierPropertyDefine::ParseFromRow(const vector<StringPiece>& row, SoldierPropertyDefine* ptr)
{
    ASSERT(row.size() >= 25);
    ASSERT(ptr != nullptr);
    ptr->Name = ParseTextAs<std::string>(row[0]);
    ptr->Level = ParseTextAs<int>(row[1]);
    ptr->NameID = ParseTextAs<std::string>(row[2]);
    ptr->Description = ParseTextAs<std::string>(row[3]);
    ptr->BuildingName = ParseTextAs<std::string>(row[4]);
    ptr->BuildingLevel = ParseTextAs<uint32_t>(row[5]);
    ptr->RequireSpace = ParseTextAs<uint32_t>(row[6]);
    ptr->Volume = ParseTextAs<uint32_t>(row[7]);
    ptr->UpgradeTime = ParseTextAs<uint32_t>(row[8]);
    ptr->UpgradeMaterialID = ParseTextAs<std::string>(row[9]);
    ptr->UpgradeMaterialNum = ParseTextAs<int64_t>(row[10]);
    ptr->ConsumeMaterial = ParseTextAs<std::string>(row[11]);
    ptr->ConsumeMaterialNum = ParseTextAs<int>(row[12]);
    ptr->ConsumeTime = ParseTextAs<int>(row[13]);
    ptr->Act = ParseTextAs<int>(row[14]);
    ptr->Hp = ParseTextAs<int>(row[15]);
    ptr->Hurt = ParseTextAs<uint32_t>(row[17]);
    ptr->SearchScope = ParseTextAs<int16_t>(row[20]);
    ptr->AtkFrequency = ParseTextAs<float>(row[21]);
    ptr->AtkRange = ParseTextAs<double>(row[22]);
    ptr->MovingSpeed = ParseTextAs<double>(row[23]);
    ptr->EnableBurn = ParseTextAs<bool>(row[24]);
    return 0;
}


} // namespace config 
