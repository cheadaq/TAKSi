// This file is auto-generated by Tabular v0.9.1, DO NOT EDIT!

#include "SoldierDefine.h"
#include <stddef.h>
#include <assert.h>
#include <memory>
#include <fstream>
#include "Conv.h"
#include "StringUtil.h"

using namespace std;

#ifndef ASSERT
#define ASSERT assert
#endif


namespace config {

// parse SoldierPropertyDefine from string fields
int SoldierPropertyDefine::ParseFrom(std::unordered_map<std::string, std::string>& record, SoldierPropertyDefine* ptr)
{
    ASSERT(ptr != nullptr);
    ptr->Name = StripWhitespace(record["Name"]);
    ptr->Level = ParseInt32(record["Level"]);
    ptr->NameID = StripWhitespace(record["NameID"]);
    ptr->Description = StripWhitespace(record["Description"]);
    ptr->BuildingName = StripWhitespace(record["BuildingName"]);
    ptr->BuildingLevel = ParseUInt32(record["BuildingLevel"]);
    ptr->RequireSpace = ParseUInt32(record["RequireSpace"]);
    ptr->Volume = ParseUInt32(record["Volume"]);
    ptr->UpgradeTime = ParseUInt32(record["UpgradeTime"]);
    ptr->UpgradeMaterialID = StripWhitespace(record["UpgradeMaterialID"]);
    ptr->UpgradeMaterialNum = ParseInt64(record["UpgradeMaterialNum"]);
    ptr->ConsumeMaterial = StripWhitespace(record["ConsumeMaterial"]);
    ptr->ConsumeMaterialNum = ParseInt32(record["ConsumeMaterialNum"]);
    ptr->ConsumeTime = ParseInt32(record["ConsumeTime"]);
    ptr->Act = ParseInt32(record["Act"]);
    ptr->Hp = ParseInt32(record["Hp"]);
    ptr->BombLoad = ParseInt16(record["BombLoad"]);
    ptr->Hurt = ParseUInt32(record["Hurt"]);
    ptr->Duration = ParseFloat(record["Duration"]);
    ptr->TriggerInterval = ParseFloat(record["TriggerInterval"]);
    ptr->SearchScope = ParseInt16(record["SearchScope"]);
    ptr->AtkFrequency = ParseFloat(record["AtkFrequency"]);
    ptr->AtkRange = ParseDouble(record["AtkRange"]);
    ptr->MovingSpeed = ParseDouble(record["MovingSpeed"]);
    ptr->EnableBurn = ParseBool(record["EnableBurn"]);
    return 0;
}


} // namespace config 
